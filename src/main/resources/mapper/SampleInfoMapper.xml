<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.message.dao.SampleInfoMapper">
  <resultMap id="BaseResultMap" type="com.message.pojo.SampleInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sample_id" jdbcType="VARCHAR" property="sampleId" />
    <result column="crop_category_id" jdbcType="INTEGER" property="cropCategoryId" />
    <result column="breed" jdbcType="INTEGER" property="breed" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="county" jdbcType="VARCHAR" property="county" />
    <result column="township" jdbcType="VARCHAR" property="township" />
    <result column="village" jdbcType="VARCHAR" property="village" />
    <result column="household" jdbcType="VARCHAR" property="household" />
    <result column="harvest_time" jdbcType="TIMESTAMP" property="harvestTime" />
    <result column="sampling_time" jdbcType="TIMESTAMP" property="samplingTime" />
    <result column="sampling_people" jdbcType="VARCHAR" property="samplingPeople" />
    <result column="pollution_rate" jdbcType="REAL" property="pollutionRate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="isdel" jdbcType="INTEGER" property="isdel" />
    <result column="input_time" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="enterpeople" jdbcType="INTEGER" property="enterpeople" />
    <result column="varieties" jdbcType="VARCHAR" property="varieties" />
    <result column="seasonal" jdbcType="LONGVARCHAR" property="seasonal" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>


  <resultMap id="BaseResultMapOne" type="com.message.pojo.SampleInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sample_id" jdbcType="VARCHAR" property="sampleId" />
    <result column="harvest_time" jdbcType="TIMESTAMP" property="harvestTime" />
    <result column="sampling_time" jdbcType="TIMESTAMP" property="samplingTime" />
    <result column="pollution_rate" jdbcType="REAL" property="pollutionRate" />
    <association property="addressProvince" javaType="addressProvince">
      <result column="pname" jdbcType="VARCHAR" property="name" />
    </association>
    <association property="addressCity" javaType="com.message.pojo.AddressCity">
      <result column="cname" jdbcType="VARCHAR" property="name" />
    </association>
    <association property="addressTown" javaType="com.message.pojo.AddressTown">
      <result column="tname" jdbcType="VARCHAR" property="name" />
    </association>
    <association property="cropSpecies" javaType="com.message.pojo.CropSpecies">
      <result column="crop_species" jdbcType="VARCHAR" property="cropSpecies" />
    </association>
    <association property="sampleToxinInfo" javaType="com.message.pojo.SampleToxinInfo">
      <result column="toxin_type" jdbcType="VARCHAR" property="toxinType" />
    </association>
  </resultMap>

  <select id="selectSampleInfoVO" resultMap="BaseResultMapTwo">
SELECT
si.id,
si.sample_id,
si.crop_category_id,
si.breed,
si.province,
si.city,
si.county,
si.township,
si.village,
si.household,
si.harvest_time,
si.sampling_time,
si.sampling_people,
si.seasonal,
si.description,
si.pollution_rate,
st.toxin_id,
st.toxin_count
FROM
sample_info AS si ,
sample_toxin AS st
WHERE
si.id = st.sample_info_id
and si.id=#{id}

  </select>

  <select id="selectAllSampleExcel" resultMap="BaseResultMapExcel">
    select  s.sample_id,s.harvest_time,s.sampling_time,s.pollution_rate,
    GROUP_CONCAT(sti.toxin_type) as toxin_type,ap.`name` as province ,ac.`name` as city ,at.`name` as county,cs.crop_species
    from
    sample_info s, sample_toxin st ,sample_toxin_info sti ,address_province ap,address_city ac, address_town at,crop_species cs
    where  s.id = st.sample_info_id and st.toxin_id = sti.id
    and s.province = ap.`code` and s.city = ac.`code` and s.county = at.code
    and s.breed = cs.id
    <if test="sampleInfoDTO.sampleId != null and sampleInfoDTO.sampleId != '' ">
      and s.sample_id like CONCAT('%',#{sampleInfoDTO.sampleId},'%')
    </if>
    <if test="sampleInfoDTO.begin != null and sampleInfoDTO.begin != '' ">
      and s.pollution_rate BETWEEN #{sampleInfoDTO.begin} and #{sampleInfoDTO.end}
    </if>
    <if test="sampleInfoDTO.time != null and sampleInfoDTO.time != '' ">
      and s.harvest_time like CONCAT('%',#{sampleInfoDTO.time},'%')
    </if>
    <if test="sampleInfoDTO.toxinType != null and sampleInfoDTO.toxinType != '' ">
      and s.id in (
      select sample_info_id from sample_toxin where toxin_id = #{sampleInfoDTO.toxinType}
      )
    </if>
    <if test="sampleInfoDTO.cropSpecies != null and sampleInfoDTO.cropSpecies != '' ">
      and s.breed = #{sampleInfoDTO.cropSpecies}
    </if>
    <if test="sampleInfoDTO.province != null and sampleInfoDTO.province != '' ">
      and s.province = #{sampleInfoDTO.province}
    </if>
    <if test="sampleInfoDTO.city != null and sampleInfoDTO.city != '' ">
      and s.city = #{sampleInfoDTO.city}
    </if>
    <if test="sampleInfoDTO.county != null and sampleInfoDTO.county != '' ">
      and s.county = #{sampleInfoDTO.county}
    </if>
    GROUP BY s.id
  </select>
  <select id="selectAllSampleExcelByList" resultMap="BaseResultMapExcel">
    select  s.sample_id,s.harvest_time,s.sampling_time,s.pollution_rate,
    GROUP_CONCAT(sti.toxin_type) as toxin_type,ap.`name` as province ,ac.`name` as city ,at.`name` as county,cs.crop_species
    from
    sample_info s, sample_toxin st ,sample_toxin_info sti ,address_province ap,address_city ac, address_town at,crop_species cs
    where  s.id = st.sample_info_id and st.toxin_id = sti.id
    and s.province = ap.`code` and s.city = ac.`code` and s.county = at.code
    and s.breed = cs.id
    <foreach collection="ids" open="and s.id in (" close=")" item="item" separator=",">
      #{item}
    </foreach>
    GROUP BY s.id
  </select>


  <sql id="Base_Column_List">
    id, sample_id, crop_category_id, breed, province, city, county, township, village, 
    household, harvest_time, sampling_time, sampling_people, pollution_rate, create_time, 
    isdel, input_time, flag, enterpeople, varieties,
    seasonal, description
  </sql>
<select id="selectAllSamleinfo" resultMap="BaseResultMapOne">
  SELECT  s.id,s.sample_id,ap.`name` as pname ,ac.`name` as cname ,at.`name` as tname,cs.crop_species,s.sampling_time,s.harvest_time,s.pollution_rate,
  GROUP_CONCAT(sti.toxin_type) as toxin_type
  FROM sample_info s
  LEFT JOIN address_province ap on s.province = ap.`code`
  LEFT JOIN address_city ac on s.city = ac.`code`
  LEFT JOIN address_town at on s.county = at.`code`
  left JOIN crop_species cs on s.breed = cs.id
  LEFT JOIN sample_toxin st on s.id = st.sample_info_id
  left JOIN sample_toxin_info sti on st.toxin_id = sti.id
  GROUP BY s.id
</select>
  <select id="selectSampleInfoLike" resultMap="BaseResultMapOne">
    SELECT  s.id,s.sample_id,ap.`name` as pname ,ac.`name` as cname ,at.`name` as tname,cs.crop_species,s.sampling_time,s.harvest_time,s.pollution_rate,
    GROUP_CONCAT(sti.toxin_type) as toxin_type

    FROM sample_info s
    LEFT JOIN address_province ap on s.province = ap.`code`
    LEFT JOIN address_city ac on s.city = ac.`code`
    LEFT JOIN address_town at on s.county = at.`code`
    left JOIN crop_species cs on s.breed = cs.id
    LEFT JOIN sample_toxin st on s.id = st.sample_info_id
    left JOIN sample_toxin_info sti on st.toxin_id = sti.id
    <where>
      <if test="sampleInfoVo.sampleId != null and sampleInfoVo.sampleId != ''">
        and s.sample_id like CONCAT("%",#{sampleInfoVo.sampleId},"%")
      </if>
      <if test="sampleInfoVo.between != null and sampleInfoVo.between != ''">
        and  s.pollution_rate BETWEEN #{sampleInfoVo.between} and #{sampleInfoVo.end}
      </if>
      <if test="sampleInfoVo.time != null and sampleInfoVo.time != ''">
        and s.sampling_time like CONCAT("%",#{sampleInfoVo.time},"%")
      </if>
      <if test="sampleInfoVo.toxinType != null and sampleInfoVo.toxinType != ''">
        and s.id in (
        SELECT sample_info_id from sample_toxin WHERE toxin_id = #{sampleInfoVo.toxinType}
        )
      </if>
      <if test="sampleInfoVo.cropSpecies != null and sampleInfoVo.cropSpecies != ''">
        and s.breed = #{sampleInfoVo.cropSpecies}
      </if>
      <if test="sampleInfoVo.province != null and sampleInfoVo.province != ''">

        and s.province = #{sampleInfoVo.province}
      </if>
      <if test="sampleInfoVo.city != null and sampleInfoVo.city != ''">

        and s.city = #{sampleInfoVo.city}
      </if>
      <if test="sampleInfoVo.county != null and sampleInfoVo.county != ''">

        and s.county = #{sampleInfoVo.county}
      </if>
    </where>
    GROUP BY s.id
  </select>
    <select id="selectSampleInfosPageCount" resultType="int">
    SELECT
      s.id,s.sample_id,ap.`name` as pname ,ac.`name` as cname,at.`name` as tname,cs.crop_species,s.sampling_time,
      s.harvest_time,s.pollution_rate,GROUP_CONCAT(sti.toxin_type) as toxin_type


      FROM sample_info s
      LEFT JOIN address_province ap on s.province = ap.`code`
      LEFT JOIN address_city ac on s.city = ac.code
      LEFT JOIN address_town at on s.county = at.`code`
      LEFT JOIN crop_species cs on s.breed = cs.id
      LEFT JOIN sample_toxin st on s.id = st.sample_info_id
      LEFT JOIN sample_toxin_info sti on st.toxin_id = sti.id
      GROUP BY s.id

      Limit #{startRow},#{pageSize}
  </select>
    <select id="selectAllSamleInfoPagCount" resultType="int">

 select  count(*) from
    (
     SELECT s.id,s.sample_id,ap.`name` as pname ,ac.`name` as cname ,at.`name` as tname,cs.crop_species,s.sampling_time,s.harvest_time,s.pollution_rate,
      GROUP_CONCAT(sti.toxin_type) as toxin_type

      FROM sample_info s
      LEFT JOIN address_province ap on s.province = ap.`code`
      LEFT JOIN address_city ac on s.city = ac.`code`
      LEFT JOIN address_town at on s.county = at.`code`
      left JOIN crop_species cs on s.breed = cs.id
      LEFT JOIN sample_toxin st on s.id = st.sample_info_id
      left JOIN sample_toxin_info sti on st.toxin_id = sti.id

      GROUP BY s.id

    ) as aa
    </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sample_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sample_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.message.pojo.SampleInfo" keyProperty="id" useGeneratedKeys="true">
    insert into sample_info (id, sample_id, crop_category_id, 
      breed, province, city, 
      county, township, village, 
      household, harvest_time, sampling_time, 
      sampling_people, pollution_rate, create_time, 
      isdel, input_time, flag, 
      enterpeople, varieties, seasonal, 
      description)
    values (#{id,jdbcType=INTEGER}, #{sampleId,jdbcType=VARCHAR}, #{cropCategoryId,jdbcType=INTEGER}, 
      #{breed,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{county,jdbcType=VARCHAR}, #{township,jdbcType=VARCHAR}, #{village,jdbcType=VARCHAR}, 
      #{household,jdbcType=VARCHAR}, #{harvestTime,jdbcType=TIMESTAMP}, #{samplingTime,jdbcType=TIMESTAMP}, 
      #{samplingPeople,jdbcType=VARCHAR}, #{pollutionRate,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isdel,jdbcType=INTEGER}, #{inputTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER}, 
      #{enterpeople,jdbcType=INTEGER}, #{varieties,jdbcType=VARCHAR}, #{seasonal,jdbcType=LONGVARCHAR}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.message.pojo.SampleInfo">
    insert into sample_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sampleId != null">
        sample_id,
      </if>
      <if test="cropCategoryId != null">
        crop_category_id,
      </if>
      <if test="breed != null">
        breed,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="township != null">
        township,
      </if>
      <if test="village != null">
        village,
      </if>
      <if test="household != null">
        household,
      </if>
      <if test="harvestTime != null">
        harvest_time,
      </if>
      <if test="samplingTime != null">
        sampling_time,
      </if>
      <if test="samplingPeople != null">
        sampling_people,
      </if>
      <if test="pollutionRate != null">
        pollution_rate,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
      <if test="inputTime != null">
        input_time,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="enterpeople != null">
        enterpeople,
      </if>
      <if test="varieties != null">
        varieties,
      </if>
      <if test="seasonal != null">
        seasonal,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sampleId != null">
        #{sampleId,jdbcType=VARCHAR},
      </if>
      <if test="cropCategoryId != null">
        #{cropCategoryId,jdbcType=INTEGER},
      </if>
      <if test="breed != null">
        #{breed,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="township != null">
        #{township,jdbcType=VARCHAR},
      </if>
      <if test="village != null">
        #{village,jdbcType=VARCHAR},
      </if>
      <if test="household != null">
        #{household,jdbcType=VARCHAR},
      </if>
      <if test="harvestTime != null">
        #{harvestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="samplingTime != null">
        #{samplingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="samplingPeople != null">
        #{samplingPeople,jdbcType=VARCHAR},
      </if>
      <if test="pollutionRate != null">
        #{pollutionRate,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="inputTime != null">
        #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="enterpeople != null">
        #{enterpeople,jdbcType=INTEGER},
      </if>
      <if test="varieties != null">
        #{varieties,jdbcType=VARCHAR},
      </if>
      <if test="seasonal != null">
        #{seasonal,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.message.pojo.SampleInfo">
    update sample_info
    <set>
      <if test="sampleId != null">
        sample_id = #{sampleId,jdbcType=VARCHAR},
      </if>
      <if test="cropCategoryId != null">
        crop_category_id = #{cropCategoryId,jdbcType=INTEGER},
      </if>
      <if test="breed != null">
        breed = #{breed,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="township != null">
        township = #{township,jdbcType=VARCHAR},
      </if>
      <if test="village != null">
        village = #{village,jdbcType=VARCHAR},
      </if>
      <if test="household != null">
        household = #{household,jdbcType=VARCHAR},
      </if>
      <if test="harvestTime != null">
        harvest_time = #{harvestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="samplingTime != null">
        sampling_time = #{samplingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="samplingPeople != null">
        sampling_people = #{samplingPeople,jdbcType=VARCHAR},
      </if>
      <if test="pollutionRate != null">
        pollution_rate = #{pollutionRate,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="inputTime != null">
        input_time = #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="enterpeople != null">
        enterpeople = #{enterpeople,jdbcType=INTEGER},
      </if>
      <if test="varieties != null">
        varieties = #{varieties,jdbcType=VARCHAR},
      </if>
      <if test="seasonal != null">
        seasonal = #{seasonal,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.message.pojo.SampleInfo">
    update sample_info
    set sample_id = #{sampleId,jdbcType=VARCHAR},
      crop_category_id = #{cropCategoryId,jdbcType=INTEGER},
      breed = #{breed,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      township = #{township,jdbcType=VARCHAR},
      village = #{village,jdbcType=VARCHAR},
      household = #{household,jdbcType=VARCHAR},
      harvest_time = #{harvestTime,jdbcType=TIMESTAMP},
      sampling_time = #{samplingTime,jdbcType=TIMESTAMP},
      sampling_people = #{samplingPeople,jdbcType=VARCHAR},
      pollution_rate = #{pollutionRate,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      isdel = #{isdel,jdbcType=INTEGER},
      input_time = #{inputTime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER},
      enterpeople = #{enterpeople,jdbcType=INTEGER},
      varieties = #{varieties,jdbcType=VARCHAR},
      seasonal = #{seasonal,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>